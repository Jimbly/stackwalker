{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app.js","glov/bootstrap.js","glov/local_storage.js","glov/polyfill.js","main.js","../lib/stack-mapper/index.js","../lib/stack-mapper/lib/setup-consumer.js"],"names":[],"mappings":"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","file":"app.bundle.js","sourceRoot":"","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* eslint global-require:off */\n\n// Startup code.\n\nlet called_once = false;\nwindow.onload = function () {\n  if (called_once) {\n    return;\n  }\n  called_once = true;\n  // require('./glov/worker_comm.js').startup(); // First, so it gets loading quickly (if workers required)\n  require('./glov/bootstrap.js');\n  require('./main.js').main();\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Things that should be done before requiring or running any user-level code or other engine code\n\nrequire('./polyfill.js');\n\nlet debug = document.getElementById('debug');\nwindow.onerror = function (e, file, line, col, errorobj) {\n  let msg = `${e}\\n  at ${file}(${line}:${col})`;\n  if (errorobj && errorobj.stack) {\n    msg = `${errorobj.stack}`;\n    if (errorobj.message) {\n      if (msg.indexOf(errorobj.message) === -1) {\n        msg = `${errorobj.message}\\n${msg}`;\n      }\n    }\n    let origin = document.location.origin || '';\n    if (origin) {\n      if (origin.slice(-1) !== '/') {\n        origin += '/';\n      }\n      msg = msg.split(origin).join(''); // replace\n    }\n    // fixup weird Firefox weirdness\n    msg = msg.replace(/\\[\\d+\\]</g, '') // remove funny [123] at start of stack lines\n      .replace(/<?\\/<?/g, '/') // remove funny <s, they mess up people's copy and paste\n      .replace(/\\n([^ ])/g, '\\n  $1'); // add indentation if missing\n  }\n  let show = true;\n  if (window.glov_error_report) {\n    show = window.glov_error_report(msg, file, line, col);\n  }\n  if (show) {\n    debug.innerText = `${msg}\\n\\nPlease report this error to the developer, and then reload this page.`;\n  }\n};\nwindow.debugmsg = function (msg, clear) {\n  if (clear) {\n    debug.innerText = msg;\n  } else {\n    debug.innerText += `${msg}\\n`;\n  }\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint-env browser */\n\nlet storage_prefix = 'demo';\n\nlet is_set = false;\nexport function setStoragePrefix(prefix) {\n  if (is_set) {\n    return;\n  }\n  is_set = true;\n  storage_prefix = prefix;\n}\nexport function getStoragePrefix() {\n  return storage_prefix;\n}\n\nlet lsd = (function () {\n  try {\n    localStorage.test = 'test';\n    return localStorage;\n  } catch (e) {\n    return {};\n  }\n}());\nexport function get(key) {\n  key = `${storage_prefix}_${key}`;\n  let ret = lsd[key];\n  if (ret === 'undefined') {\n    ret = undefined;\n  }\n  return ret;\n}\n\nexport function set(key, value) {\n  key = `${storage_prefix}_${key}`;\n  if (value === undefined || value === null) {\n    delete lsd[key];\n  } else {\n    lsd[key] = value;\n  }\n}\n\nexport function setJSON(key, value) {\n  set(key, JSON.stringify(value));\n}\n\nexport function getJSON(key, def) {\n  let value = get(key);\n  if (value === undefined) {\n    return def;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    // ignore\n  }\n  return def;\n}\n\nexport function clearAll(key_prefix) {\n  let prefix = new RegExp(`^${storage_prefix}_${key_prefix || ''}`, 'u');\n  for (let key in lsd) {\n    if (key.match(prefix)) {\n      delete lsd[key];\n    }\n  }\n}\n\nexport function exportAll() {\n  let obj = {};\n  let prefix = new RegExp(`^${storage_prefix}_(.*)`, 'u');\n  for (let key in lsd) {\n    let m = key.match(prefix);\n    if (m) {\n      let v = lsd[key];\n      if (v && v !== 'undefined') {\n        obj[m[1]] = v;\n      }\n    }\n  }\n  return JSON.stringify(obj);\n}\n\nexport function importAll(serialized) {\n  let obj = JSON.parse(serialized);\n  clearAll();\n  for (let key in obj) {\n    set(key, obj[key]);\n  }\n}\n","/* eslint no-extend-native:off,no-invalid-this:off */\n\n// TypedArray.slice, fill, join, sort, etc - not supported on IE, some older Safari, older Android, Chrome 44\nlet typedarrays = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array];\n\nif (!Uint8Array.prototype.slice) {\n  typedarrays.forEach(function (ArrayType) {\n    Object.defineProperty(ArrayType.prototype, 'slice', {\n      value: function (begin, end) {\n        if (end === undefined) {\n          end = this.length;\n        }\n        if (end < 0) {\n          end = this.length - end;\n        }\n        begin = begin || 0;\n        if (begin >= this.length) {\n          begin = this.length - 1;\n        }\n        if (end > this.length) {\n          end = this.length;\n        }\n        if (end < begin) {\n          end = begin;\n        }\n        let len = end - begin;\n        let ret = new ArrayType(len);\n        for (let ii = 0; ii < len; ++ii) {\n          ret[ii] = this[begin + ii];\n        }\n        return ret;\n      }\n    });\n  });\n}\n\nfunction cmpDefault(a, b) {\n  return a - b;\n}\nlet replacements = {\n  join: function (delim) {\n    return Array.prototype.join.call(this, delim);\n  },\n  fill: function (value, begin, end) {\n    if (end === undefined) {\n      end = this.length;\n    }\n    for (let ii = begin || 0; ii < end; ++ii) {\n      this[ii] = value;\n    }\n    return this;\n  },\n  sort: function (cmp) {\n    Array.prototype.sort.call(this, cmp || cmpDefault);\n  },\n};\n\nfor (let key in replacements) {\n  if (!Uint8Array.prototype[key]) {\n    typedarrays.forEach(function (ArrayType) {\n      Object.defineProperty(ArrayType.prototype, key, {\n        value: replacements[key],\n      });\n    });\n  }\n}\n\nif (!String.prototype.endsWith) {\n  Object.defineProperty(String.prototype, 'endsWith', {\n    value: function (test) {\n      return this.slice(-test.length) === test;\n    },\n  });\n  Object.defineProperty(String.prototype, 'startsWith', {\n    value: function (test) {\n      return this.slice(0, test.length) === test;\n    },\n  });\n}\n","/* eslint no-useless-catch:off */\nconst assert = require('assert');\nconst local_storage = require('./glov/local_storage.js');\nlocal_storage.setStoragePrefix('stackwalker'); // Before requiring anything else that might load from this\n\nconst querystring = require('query-string');\nconst stack_mapper = require('../lib/stack-mapper/index.js');\nconst UAParser = require('ua-parser-js');\n\nlet error_report_regex = /^([^ ]+) \\[([^\\]]+)] \"POST ([^\"?]+)?([^\"]+)\" START \"([^\"]+)\" \"([^\"]+)\"$/;\nlet fileline_regexs = [\n  /(.)([^(/:]+)\\((\\d+):(\\d+)\\)$/,\n  ///(?:at ([^(]+) \\(.*\\/)?([^(/:]+):(\\d+)(?::(\\d+))?\\)$/,\n  /(?:at ([^(]+) \\((?:.*\\/)?)?([^(/:]+):(\\d+)(?::(\\d+))?\\)$/,\n  /\\/*([^/@]+)\\/*@.*\\/([^(/:]+):(\\d+)(?::(\\d+))?$/,\n  /()([^(/:]+):(\\d+):(\\d+)?$/,\n];\n// at Object.replaceVideoShadowStyle (<anonymous>:1:3601)\n\nlet error_status;\n\nfunction prettyFileLine(a) {\n  if (a.fn) {\n    return `${a.fn} (${a.filename}:${a.line}:${a.column})`;\n  } else {\n    return `${a.filename}:${a.line}:${a.column}`;\n  }\n}\n\nlet was_regex_error = false;\nfunction parseIgnoreList(text) {\n  let lines = text.split('\\n').filter((a) => a.trim());\n  let need_clear = was_regex_error;\n  was_regex_error = false;\n  let parsed = lines.map((a) => {\n    let ret = {};\n    if (a[0] === '=') {\n      a = a.slice(1);\n      ret.matcher = true;\n    }\n    if (a[0] === '/') {\n      try {\n        ret.regex = new RegExp(a.slice(1));\n      } catch (e) {\n        ret.str = a;\n        error_status.textContent = `\\n${e}`;\n        was_regex_error = true;\n      }\n    } else {\n      ret.str = a;\n    }\n    return ret;\n  });\n  if (need_clear && !was_regex_error) {\n    error_status.textContent = '';\n  }\n  return parsed;\n}\n\nfunction jsonParse(text) {\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction headerFromQuery(query) {\n  let header = [];\n  if (query.cidx && query.cidx !== '1' && query.cidx !== '0') {\n    header.push(`CIDX=${query.cidx}`);\n  }\n  if (query.disconnected) {\n    header.push('DISCONNECTED');\n  }\n  if (query.modapi_cdata) {\n    header.push('MODDED');\n  }\n  if (query.context_lost) {\n    header.push('CtxLost');\n  }\n  if (query.ver) {\n    if (query.build) {\n      header.push(`ver=${query.build}(${query.ver})`);\n    } else {\n      header.push(`ver=${query.ver}`);\n    }\n  } else if (query.build) {\n    header.push(`ver=${query.build}`);\n  }\n  if (query.user_id) {\n    header.push(`user_id=${query.user_id}`);\n  }\n  if (query.client_id) {\n    header.push(`client_id=${query.client_id}`);\n  }\n  if (query.ip) {\n    header.push(`ip=${query.ip}`);\n  }\n  return header;\n}\n\nfunction header2FromQuery(query) {\n  let header = [];\n  if (query.webgl) {\n    header.push(`WebGL${query.webgl}`);\n  }\n  if (query.renderer_unmasked) {\n    header.push(query.renderer_unmasked);\n  }\n  return header;\n}\n\nfunction matchReset(list) {\n  for (let ii = 0; ii < list.length; ++ii) {\n    if (list[ii].matcher) {\n      list[ii].matched = false;\n    }\n  }\n}\n\nfunction matchPass(list) {\n  for (let ii = 0; ii < list.length; ++ii) {\n    if (list[ii].matcher && !list[ii].matched) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction ignored(list, text) {\n  if (!text) {\n    return false;\n  }\n  for (let ii = 0; ii < list.length; ++ii) {\n    let elem = list[ii];\n    let matches = false;\n    if (elem.regex) {\n      if (text.match(elem.regex)) {\n        matches = true;\n      }\n    } else if (text.indexOf(elem.str) !== -1) {\n      matches = true;\n    }\n    if (matches) {\n      if (elem.matcher) {\n        elem.matched = true;\n      } else {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction userURL(url) {\n  let m = url.match(/\\/\\/([^/]+)\\/(.+)/);\n  if (m) {\n    // let domain = m[1];\n    let rest = m[2];\n    let m2 = rest.match(/index\\.html\\??(.*)/);\n    if (m2) {\n      return m2[1];\n    } else {\n      return rest;\n    }\n  }\n  return url;\n}\n\nlet setSourcemapData;\nlet upload_status;\nlet error_text = '';\nfunction errorMessage(msg) {\n  upload_status.textContent = msg;\n  error_text += `\\n${msg}`;\n  error_status.textContent = error_text;\n}\nconst SOURCEMAP_SERVER = 'http://localhost:3500/sourcemap/';\nfunction autoloadSourcemap(path, ver) {\n  if (!SOURCEMAP_SERVER) {\n    return;\n  }\n  let xhr = new XMLHttpRequest();\n  xhr.withCredentials = false;\n  xhr.open('GET', `${SOURCEMAP_SERVER}${path}`, true);\n  xhr.onload = () => {\n    if (xhr.status === 200) {\n      setSourcemapData(-1, xhr.responseText, ver);\n      upload_status.textContent = `Auto-loaded ${path}`;\n    } else {\n      if (path.includes('worker')) {\n        // doesn't exist for some projects, silently ignore\n      } else {\n        errorMessage(`Error auto-loading ${path}: ${xhr.responseText}`);\n      }\n    }\n  };\n  xhr.onerror = () => {\n    errorMessage(`Error auto-loading ${path}`);\n  };\n  xhr.send(null);\n}\n\nlet autoloaded_sourcemaps = {};\nfunction autoloadSourcemapsForVersion(cluster_or_project, ver) {\n  let key = `${cluster_or_project}#${ver}`;\n  if (autoloaded_sourcemaps[key]) {\n    return;\n  }\n  autoloaded_sourcemaps[key] = true;\n\n  autoloadSourcemap(`${cluster_or_project}/${ver}/app.bundle.js.map`, ver);\n  autoloadSourcemap(`${cluster_or_project}/${ver}/app_deps.bundle.js.map`, ver);\n  autoloadSourcemap(`${cluster_or_project}/${ver}/worker.bundle.js.map`, ver);\n}\n\nfunction cleanTimestamp(timestamp) {\n  if (timestamp && timestamp.length && timestamp.length > 23 && timestamp.endsWith('Z')) {\n    return `${timestamp.slice(0, 23)}Z`;\n  }\n  return timestamp;\n}\n\nfunction identity(a) {\n  return a;\n}\n\nfunction addUAFields(parts, arr) {\n  let str = arr.filter(identity).join(' ');\n  if (str) {\n    parts.push(str);\n  }\n}\n\nfunction friendlyUA(ua) {\n  let parts = [];\n  let data = new UAParser(ua);\n  let browser = data.getBrowser();\n  addUAFields(parts, [browser.name, browser.version]);\n  let device = data.getDevice();\n  addUAFields(parts, [device.model, device.type, device.vendor]);\n  let os = data.getOS();\n  addUAFields(parts, [os.name, os.version]);\n  parts.push(`Raw=${ua}`);\n\n  return `UA=${parts.join(', ')}`;\n}\n\nfunction preparseEntryShared(record, query, ignore_list) {\n  let { timestamp } = record;\n  matchReset(ignore_list);\n  if (ignored(ignore_list, query.msg)) {\n    return null;\n  }\n  if (query.build || query.ver) {\n    if (record.resource?.labels?.cluster_name) {\n      autoloadSourcemapsForVersion(record.resource.labels.cluster_name, query.build || query.ver);\n    } else if (query.project === 'frvr_edits2') {\n      // HACK: Probably not needed anymore, only needed when loading these lots from the wrong endpoint\n      autoloadSourcemapsForVersion('game-server-cluster1', query.build || query.ver);\n    } else if (query.project) {\n      autoloadSourcemapsForVersion(query.project, query.build || query.ver);\n    }\n  }\n  let subsection = [];\n  let top_line = `${cleanTimestamp(timestamp)}${query.pos ? ` pos=${query.pos}` : ''} URL=${userURL(query.url)}`;\n  if (ignored(ignore_list, top_line)) {\n    return null;\n  }\n  subsection.push(top_line);\n  let ua_line = friendlyUA(query.ua);\n  if (query.platform && query.platform !== 'web') {\n    ua_line = `${query.platform} ${ua_line}`;\n  }\n  if (ignored(ignore_list, ua_line)) {\n    return null;\n  }\n  subsection.push(ua_line);\n  let header = headerFromQuery(query);\n  if (header.length) {\n    header = header.join(', ');\n    if (ignored(ignore_list, header)) {\n      return null;\n    }\n    subsection.push(header);\n  }\n  let header2 = header2FromQuery(query);\n  if (header2.length) {\n    header2 = header2.join(', ');\n    if (ignored(ignore_list, header2)) {\n      return null;\n    }\n    subsection.push(header2);\n  }\n  if (query.file) {\n    let m = query.file.match(/[^/]+$/);\n    subsection.push(prettyFileLine({\n      filename: m && m[0],\n      line: query.line,\n      column: query.col,\n    }));\n  }\n  subsection = subsection.concat(query.msg.split('\\n'));\n  subsection.push('');\n  if (!matchPass(ignore_list)) {\n    return null;\n  }\n  return subsection;\n}\n\n\nfunction preparseGlovReportEntry(record, ignore_list) {\n  let query = record;\n  return preparseEntryShared(record, query, ignore_list);\n}\n\nfunction preparseGcloudEntry(record, ignore_list) {\n  let query = record.jsonPayload;\n  assert(query);\n  if (query.payload) {\n    query = query.payload;\n  }\n  return preparseEntryShared(record, query, ignore_list);\n}\n\nfunction preparseGcloud(json, ignore_list) {\n  let ret = [];\n  for (let ii = 0; ii < json.length; ++ii) {\n    let record = json[ii];\n    let subsection = preparseGcloudEntry(record, ignore_list);\n    if (subsection && subsection.length) {\n      ret = ret.concat(subsection);\n    }\n  }\n\n  return ret.join('\\n');\n}\n\nfunction preparse(text, ignore_list) {\n  let json;\n  if (text[0] === '[' && (json = jsonParse(text))) {\n    return preparseGcloud(json, ignore_list);\n  }\n  let lines = text.split('\\n');\n  let ret = [];\n  for (let ii = 0; ii < lines.length; ++ii) {\n    let line = lines[ii];\n    if (line[0] === '{' && (json = jsonParse(line))) {\n      let subsection;\n      if (json.jsonPayload?.payload) {\n        subsection = preparseGcloudEntry(json, ignore_list);\n      } else {\n        subsection = preparseGlovReportEntry(json, ignore_list);\n      }\n      if (subsection && subsection.length) {\n        ret = ret.concat(subsection);\n      }\n      continue;\n    }\n    matchReset(ignore_list);\n    if (ignored(ignore_list, line) || !matchPass(ignore_list)) {\n      continue;\n    }\n    let m = line.match(error_report_regex);\n    if (!m) {\n      ret.push(line);\n      continue;\n    }\n    // let ip = m[1];\n    // let timestamp = m[2];\n    // let url_start = m[3];\n    let search = m[4];\n    // let referrer = m[5];\n    let useragent = m[6];\n    let query = querystring.parse(search);\n    // Source URL line\n    if (query.url) {\n      ret.push('');\n      ret.push(`User URL=${userURL(query.url)}, UA=${useragent}`);\n    }\n    // Header line\n    let header = headerFromQuery(query);\n    if (header.length) {\n      ret.push(header.join(', '));\n    }\n    if (query.file) {\n      ret.push(prettyFileLine({\n        filename: query.file.match(/[^/]+$/)[0],\n        line: query.line,\n        column: query.col,\n      }));\n    }\n    ret = ret.concat(query.msg.split('\\n'));\n  }\n  return ret.join('\\n');\n}\n\nfunction parseStack(text, ignore_list) {\n  text = preparse(text, ignore_list);\n  let lines = text.split('\\n');\n  let ver = 0;\n  lines = lines.map((line) => {\n    if (!line) {\n      ver = 0;\n    } else if (line.match(/ver=(\\d+)/)) {\n      ver = line.match(/ver=(\\d+)/)[1];\n    }\n    let m;\n    for (let ii = 0; !m && ii < fileline_regexs.length; ++ii) {\n      m = line.match(fileline_regexs[ii]);\n    }\n    if (m) {\n      let filename = m[2];\n      if (filename.indexOf('?') !== -1) {\n        filename = filename.slice(0, filename.indexOf('?'));\n      }\n      return {\n        fn: m[1],\n        filename,\n        line: m[3],\n        column: m[4] ? Number(m[4]) : undefined,\n        tooltip: line,\n        ver,\n      };\n    }\n    return { err: line, tooltip: line };\n  });\n  return lines;\n}\n\nexport function main() {\n  let uploads = [\n    document.getElementById('upload1'),\n    document.getElementById('upload2'),\n    document.getElementById('upload3'),\n  ];\n  upload_status = document.getElementById('upload_status');\n  error_status = document.getElementById('error_status');\n\n  let stack = document.getElementById('stack');\n  let ignore = document.getElementById('ignore');\n  let frames_bundle = document.getElementById('frames_bundle');\n  let frames_source = document.getElementById('frames_source');\n  let sourcecode = document.getElementById('sourcecode');\n  let source_pre = document.getElementById('source_pre');\n  let source_line = document.getElementById('source_line');\n  let source_post = document.getElementById('source_post');\n  let fileinfo = document.getElementById('fileinfo');\n  let selected_line = document.getElementById('selected_line');\n\n  let stack_data;\n  let ignore_data;\n  let sourcemap_data = [];\n  let stackmapper = [];\n\n  let raw_lines;\n  function toOptions(list, skip_disabled) {\n    raw_lines = [];\n    return list.map((a) => {\n      let str = a.err !== undefined ? a.err : prettyFileLine(a);\n      raw_lines.push(str);\n      return `<option${a.err ? ' class=\"disabled\"' : ''}` +\n        `${a.tooltip?` title=\"${a.tooltip.replace(/\"/g, '&quot;').replace(/</g, '&lt;')}\"`:''}` +\n        `>${str.replace(/</g, '&lt;')}</option>`;\n    }).join('\\n');\n  }\n\n  let mapped_stack;\n\n  function update() {\n    // window.debugmsg('', true);\n    let ignore_list = parseIgnoreList(ignore_data);\n    let stack_frames = parseStack(stack_data, ignore_list);\n    frames_bundle.innerHTML = toOptions(stack_frames, true);\n    frames_bundle.raw_lines = raw_lines;\n\n    mapped_stack = null;\n    let any_stackmapper = false;\n    for (let ii = 0; ii < stackmapper.length; ++ii) {\n      if (stackmapper[ii]) {\n        any_stackmapper = true;\n        break;\n      }\n    }\n    if (!any_stackmapper) {\n      frames_source.innerHTML = toOptions([{ err: 'Missing sourcemap' }]);\n      return;\n    }\n    let line_mapping = {};\n    let to_process = [];\n    for (let ii = 0; ii < stack_frames.length; ++ii) {\n      let elem = stack_frames[ii];\n      if (elem.filename && elem.line) {\n        line_mapping[ii] = to_process.length;\n        to_process.push({\n          filename: elem.filename,\n          line: elem.line,\n          column: elem.column ? elem.column - 1 : undefined, // the - 1 seems to help map to the right line a lot\n          for_ver: elem.ver,\n        });\n      }\n    }\n    for (let ii = 0; ii < stackmapper.length; ++ii) {\n      if (stackmapper[ii]) {\n        let for_ver = sourcemap_data[ii].for_ver;\n        if (for_ver) {\n          // Only process matching lines\n          let matched = to_process.filter((a) => a.for_ver === for_ver);\n          stackmapper[ii].map(matched); // modifies in-place\n        } else {\n          let out = stackmapper[ii].map(to_process);\n          for (let jj = 0; jj < out.length; ++jj) {\n            assert.equal(out[jj], to_process[jj]); // this modifies in-place\n          }\n        }\n      }\n    }\n    let out_lines = [];\n    mapped_stack = [];\n    for (let ii = 0; ii < stack_frames.length; ++ii) {\n      if (line_mapping[ii] === undefined) {\n        mapped_stack.push(null);\n        out_lines.push({ err: '' });\n      } else {\n        let mapped = to_process[line_mapping[ii]];\n        mapped_stack.push(mapped);\n        out_lines.push(mapped);\n      }\n    }\n    frames_source.innerHTML = toOptions(out_lines);\n    frames_source.raw_lines = raw_lines;\n  }\n\n  setSourcemapData = function (idx, text, for_ver) {\n    if (idx === -1) {\n      idx = Math.max(3, sourcemap_data.length);\n    }\n    try {\n      sourcemap_data[idx] = JSON.parse(text);\n    } catch (e) {\n      if (text.match(/error/i)) {\n        errorMessage(`Error parsing Sourcemap: ${text}`);\n        return;\n      } else {\n        upload_status.textContent = 'Status: Error parsing Sourcemap';\n        throw e;\n      }\n    }\n    if (sourcemap_data[idx] && sourcemap_data[idx].version === 3) {\n      upload_status.textContent = 'Status: Sourcemap loaded';\n      stackmapper[idx] = stack_mapper(sourcemap_data[idx]);\n      sourcemap_data[idx].for_ver = for_ver;\n      //local_storage.setJSON('sourcemap', sourcemap_data);\n    } else {\n      errorMessage('Error parsing Sourcemap (expected version: 3)');\n    }\n    update();\n  };\n\n  function looseFilenameMatch(a, b) {\n    if (a.endsWith(b)) {\n      let prechar = a.slice(-b.length - 1, -b.length);\n      return !prechar || prechar === '/' || prechar === '\\\\';\n    }\n    return false;\n  }\n\n  function updateFocus() {\n    let idx = frames_bundle.selectedIndex;\n    let lineinfo = mapped_stack && mapped_stack[idx];\n    if (!lineinfo) {\n      source_pre.textContent = 'No source selected';\n      source_line.textContent = source_post.textContent = fileinfo.textContent = '';\n      return;\n    }\n    let { filename, line } = lineinfo;\n    let any_sourcemap = false;\n    for (let jj = 0; jj < sourcemap_data.length; ++jj) {\n      if (!sourcemap_data[jj]) {\n        continue;\n      }\n      any_sourcemap = true;\n      let { sources, sourcesContent } = sourcemap_data[jj];\n      let found = sources.indexOf(filename);\n      for (let ii = 0; found === -1 && ii < sources.length; ++ii) {\n        if (looseFilenameMatch(sources[ii], filename)) {\n          found = ii;\n        }\n      }\n      if (found === -1 || !sourcesContent[found]) {\n        continue;\n      }\n      fileinfo.textContent = `File: ${filename}`;\n      let lines = sourcesContent[found].split('\\n');\n      source_pre.textContent = lines.slice(0, line - 1).join('\\n');\n      source_line.textContent = lines[line - 1];\n      source_post.textContent = lines.slice(line, lines.length).join('\\n');\n      source_line.scrollIntoView(true);\n      let st = sourcecode.scrollTop;\n      source_line.scrollIntoView(false);\n      st += sourcecode.scrollTop;\n      sourcecode.scrollTop = Math.round(st / 2);\n      return;\n    }\n    if (!any_sourcemap) {\n      source_pre.textContent = 'No sourcemap loaded';\n      source_line.textContent = source_post.textContent = fileinfo.textContent = '';\n    } else {\n      source_pre.textContent = `Could not find ${filename} in sourcemap.sources`;\n      source_line.textContent = source_post.textContent = '';\n    }\n  }\n\n  uploads.forEach((elem, idx) => {\n    elem.addEventListener('change', (ev) => {\n      let file_to_load = elem.files[0];\n      if (!file_to_load) {\n        return;\n      }\n      let reader = new FileReader();\n      local_storage.set('sourcemap', undefined);\n      sourcemap_data[idx] = null;\n      stackmapper[idx] = null;\n      reader.onload = (loaded_event) => {\n        let text = loaded_event.target.result;\n        setSourcemapData(idx, text, 0);\n      };\n\n      reader.readAsText(file_to_load, 'UTF-8');\n    });\n  });\n\n  function onStackChange(ev) {\n    error_text = [];\n    error_status.textContent = '';\n    if (ev.target.value.startsWith('(loaded ')) {\n      // ignore, leave stack_data\n    } else {\n      stack_data = ev.target.value;\n      local_storage.set('stack', stack_data);\n      update();\n    }\n  }\n  stack.addEventListener('textInput', (ev) => {\n    let text = ev.data;\n    if (text.length > 10000) {\n      // large paste, just store the data but don't add it to the DOM\n      stack_data = text;\n      ev.target.value = `(loaded ${text.length} bytes)`;\n      ev.preventDefault();\n      update();\n    }\n  });\n  stack.addEventListener('change', onStackChange);\n  stack.addEventListener('input', onStackChange);\n  stack.value = stack_data = local_storage.get('stack') || '';\n\n  function onIgnoreChange(ev) {\n    ignore_data = ev.target.value;\n    local_storage.set('ignore', ignore_data);\n    update();\n  }\n  ignore.addEventListener('change', onIgnoreChange);\n  ignore.addEventListener('input', onIgnoreChange);\n  ignore.value = ignore_data = local_storage.get('ignore') || '';\n\n  function onFramesChange(ev) {\n    let idx = ev.target.selectedIndex;\n    if (frames_bundle.selectedIndex !== idx) {\n      frames_bundle.selectedIndex = idx;\n    }\n    if (frames_source.selectedIndex !== idx) {\n      frames_source.selectedIndex = idx;\n    }\n    updateFocus();\n  }\n  frames_bundle.addEventListener('change', onFramesChange);\n  //frames_bundle.addEventListener('input', onFramesChange);\n  frames_source.addEventListener('change', onFramesChange);\n  //frames_source.addEventListener('input', onFramesChange);\n  frames_bundle.addEventListener('change', (ev) => {\n    selected_line.value = frames_bundle.raw_lines[ev.target.selectedIndex];\n  });\n  frames_source.addEventListener('change', (ev) => {\n    selected_line.value = frames_source.raw_lines[ev.target.selectedIndex];\n  });\n\n  //sourcemap_data = local_storage.getJSON('sourcemap');\n  if (sourcemap_data[0] && sourcemap_data[0].version === 3) {\n    upload_status.textContent = 'Status: Sourcemap loaded from local storage';\n  }\n\n  // Sync scroll areas\n  let scroll_locked_source = 0;\n  let scroll_locked_bundle = 0;\n  frames_source.addEventListener('scroll', () => {\n    if (Date.now() < scroll_locked_source) {\n      return;\n    }\n    scroll_locked_bundle = Date.now() + 400;\n    frames_bundle.scrollTop = frames_source.scrollTop;\n  });\n  frames_bundle.addEventListener('scroll', () => {\n    if (Date.now() < scroll_locked_bundle) {\n      return;\n    }\n    scroll_locked_source = Date.now() + 400;\n    frames_source.scrollTop = frames_bundle.scrollTop;\n  });\n\n  update();\n}\n","/* eslint-disable */\n'use strict';\n\nvar setupConsumer = require('./lib/setup-consumer.js')\n\nmodule.exports =\n\n/**\n * Returns a Stackmapper that will use the given source map to map error trace locations.\n *\n * @name stackMapper\n * @function\n * @param {Object} sourcemap source map for the generated file\n * @return {StackMapper} stack mapper for the particular source map\n */\nfunction stackMapper(sourcemap) { return new StackMapper(sourcemap); }\nvar proto = StackMapper.prototype;\n\nfunction filter(arr, fn) {\n  var matches = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (fn(arr[i])) matches.push(arr[i]);\n  }\n  return matches;\n}\n\n/**\n * Creates a Stackmapper that will use the given source map to map error trace locations\n *\n * @name StackMapper\n * @private\n * @constructor\n * @param {Object} sourcemap\n */\nfunction StackMapper(sourcemap) {\n  if (!(this instanceof StackMapper)) return new StackMapper(sourcemap);\n  if (typeof sourcemap !== 'object')\n    throw new Error('sourcemap needs to be an object, please use convert-source-map module to convert it from any other format\\n' +\n                    'See: https://github.com/thlorenz/stack-mapper#obtaining-the-source-map');\n\n  this._sourcemap = sourcemap;\n  this._prepared = false;\n}\n\nproto._prepare = function () {\n  var prepped = setupConsumer(this._sourcemap);\n  this._originalPosition = prepped.originalPosition;\n  this._prepared = true;\n}\n\nproto._mapStack = function (stack) {\n  var self = this;\n\n  var generatedFile = self._sourcemap.file;\n  var re = new RegExp(generatedFile + '$');\n\n  for (var i = 0; i < stack.length; i++) {\n    var frame = stack[i];\n\n    if (!re.test(frame.filename)) {\n      continue;\n    }\n\n    var orig = self._originalPosition(frame.line, frame.column);\n    frame.filename = orig.source;\n    frame.line = orig.line;\n\n    // In case that the sourcemap was generated for a javascript file, the column numbers might not have been added\n    // In that case it makes sense to assume that it is the same as the generated column number\n    if (!(orig.source && orig.source.slice(-3) === '.js' && orig.column === 0 && frame.column > 0)) {\n      frame.column = orig.column;\n    }\n  }\n}\n\n/**\n * Maps the trace statements of the given error stack and replaces locations\n * referencing code in the generated file with the locations inside the original files.\n *\n * @name map\n * @function\n * @param {Array} array of callsite objects (see readme for details about Callsite object)\n * @param {boolean} includeSource if set to true, the source code at the first traced location is included\n * @return {Array.<Object>} info about the error stack with adapted locations, each with the following properties\n *    - filename: original filename\n *    - line: origial line in that filename of the trace\n *    - column: origial column on that line of the trace\n */\nproto.map = function (stack) {\n\n  // do work at latest point possible and only once\n  if (!this._prepared) this._prepare();\n\n  // clone to leave original intact\n  var adapted = [].concat(stack);\n\n  // replace stack entries with mapped entires to original\n  this._mapStack(adapted);\n\n  return adapted;\n}\n","/* eslint-disable */\n'use strict';\n\nvar SourceMapConsumer = require('source-map-cjs/lib/source-map/source-map-consumer').SourceMapConsumer\n\nvar go = module.exports =\n\n/**\n * Sets up the sourcemap consumer and hashes sources by file\n *\n * @name setupConsumer\n * @private\n * @function\n * @param {Object} sourcemap the mappings from the generated file back to the original files/locations\n * @return {Object} with properties\n *  - {Function(line, column)} originalPosition gets the orignal position for the given generated position\n */\nfunction setupConsumer(sourcemap) {\n\n  var consumer = new SourceMapConsumer(sourcemap)\n  var sources = sourcemap.sources;\n\n  function originalPosition(line, column) {\n    return consumer.originalPositionFor({ source: sourcemap.file, line: line, column: column });\n  }\n\n  return {\n      originalPosition: originalPosition\n  };\n}\n"]}